/*
Nikolay Anatoliev Nikolaev
3235106
e-s32
*/

--Exercice 1

SET SERVEROUTPUT ON;
DECLARE
	CURSOR c_countries IS
	SELECT COUNTRY_ID, COUNTRY_NAME
	FROM COUNTRIES
	ORDER BY COUNTRY_NAME;
	
	CURSOR c_employees(c_id LOCATIONS.COUNTRY_ID%type) IS
	SELECT FIRST_NAME, LAST_NAME
	FROM EMPLOYEES e
	LEFT JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
	LEFT JOIN LOCATIONS l ON d.LOCATION_ID = l.LOCATION_ID
	WHERE l.COUNTRY_ID = c_id
	ORDER BY SALARY DESC;
BEGIN
	FOR C IN c_countries
	LOOP
		DBMS_OUTPUT.PUT_LINE(C.COUNTRY_NAME);

		FOR E IN c_employees(C.COUNTRY_ID)
		LOOP
			DBMS_OUTPUT.PUT_LINE('--' || E.LAST_NAME || ', ' || E.FIRST_NAME);
		END LOOP;
	END LOOP;
END;
/

--Exercise 2a

CREATE OR REPLACE PROCEDURE INSERT_LOCATION(max_id OUT LOCATIONS.LOCATION_ID%type,
STR_ADDRESS IN LOCATIONS.STREET_ADDRESS%type,
POS_CODE IN LOCATIONS.POSTAL_CODE%type,
C IN LOCATIONS.CITY%type,
ST_PROVINCE IN LOCATIONS.STATE_PROVINCE%type,
C_ID IN LOCATIONS.COUNTRY_ID%type)
IS
BEGIN
	SELECT MAX(LOCATION_ID) INTO max_id
	FROM LOCATIONS;

	max_id := max_id + 100;

	INSERT INTO LOCATIONS(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID)
	VALUES(max_id, INITCAP(STR_ADDRESS), POS_CODE, INITCAP(C), INITCAP(ST_PROVINCE), C_ID);

	EXCEPTION
		WHEN OTHERS THEN
			IF SQLCODE = -02291 THEN
				DBMS_OUTPUT.PUT_LINE('No such country');
			END IF;

END INSERT_LOCATION;
/

--Exercise 2b

SET SERVEROUTPUT ON;
DECLARE
	loc_id LOCATIONS.LOCATION_ID%type;
BEGIN
	INSERT_LOCATION(loc_id, 'RACHELSMOLEN 1', '5612 MA', 'EINDHOVEN', 'nb', 'NL');

	DBMS_OUTPUT.PUT_LINE('The new location id is: ' || loc_id);

END;
/

--Exercice 3

CREATE OR REPLACE TRIGGER DEPARTMENTS_CHECK
BEFORE INSERT OR UPDATE OF LOCATION_ID ON DEPARTMENTS
FOR EACH ROW
DECLARE
	departments_count NUMBER(1);
BEGIN
	SELECT COUNT(*) INTO departments_count
	FROM DEPARTMENTS d
	LEFT JOIN LOCATIONS l ON d.LOCATION_ID = l.LOCATION_ID
	LEFT JOIN COUNTRIES c ON l.COUNTRY_ID = c.COUNTRY_ID
	WHERE c.COUNTRY_ID <> 'US' AND l.LOCATION_ID = :NEW.LOCATION_ID;

	IF departments_count > 2 THEN
		RAISE_APPLICATION_ERROR(-20001, 'Maximum of 3 departments reached.');
	END IF;
END;

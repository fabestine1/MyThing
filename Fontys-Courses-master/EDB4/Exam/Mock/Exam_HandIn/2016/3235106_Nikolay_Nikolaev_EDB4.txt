/*
Nikolay Nikolaev
3235106
e-s32
*/

--Exercise 1a
SET SERVEROUTPUT ON;
DECLARE
    CURSOR c_jobs IS
    SELECT JOB_ID, JOB_TITLE
    FROM JOBS
    ORDER BY JOB_TITLE;
    
    CURSOR c_jobs_employees(J_ID JOBS.JOB_ID%type) IS
    SELECT LAST_NAME, START_DATE, END_DATE
    FROM JOB_HISTORY
    LEFT JOIN EMPLOYEES ON JOB_HISTORY.EMPLOYEE_ID = EMPLOYEES.EMPLOYEE_ID
    WHERE JOB_HISTORY.JOB_ID = J_ID
    ORDER BY START_DATE;
BEGIN
    FOR J IN c_jobs
    LOOP
        DBMS_OUTPUT.PUT_LINE(J.JOB_TITLE);
    
        FOR EMPLOYEE IN c_jobs_employees(J.JOB_ID)
        LOOP
            DBMS_OUTPUT.PUT_LINE(CHR(9) || '-- ' || EMPLOYEE.LAST_NAME || ' from: ' || TO_CHAR(EMPLOYEE.START_DATE, 'DD-MM-YY') || ' until ' || TO_CHAR(EMPLOYEE.END_DATE, 'DD-MM-YY'));
        END LOOP;
    
    END LOOP;
END;
/

--Exercise 1b
SET SERVEROUTPUT ON;
DECLARE
    CURSOR c_jobs IS
    SELECT JOB_ID, JOB_TITLE
    FROM JOBS
    ORDER BY JOB_TITLE;
    
    CURSOR c_jobs_employees(J_ID JOBS.JOB_ID%type) IS
    SELECT LAST_NAME, START_DATE, END_DATE
    FROM JOB_HISTORY
    LEFT JOIN EMPLOYEES ON JOB_HISTORY.EMPLOYEE_ID = EMPLOYEES.EMPLOYEE_ID
    WHERE JOB_HISTORY.JOB_ID = J_ID
    ORDER BY START_DATE;
BEGIN
    FOR J IN c_jobs
    LOOP
        FOR EMPLOYEE IN c_jobs_employees(J.JOB_ID)
        LOOP
            IF c_jobs_employees%ROWCOUNT = 1 THEN
            DBMS_OUTPUT.PUT_LINE(J.JOB_TITLE);
            END IF;
            
            DBMS_OUTPUT.PUT_LINE(CHR(9) || '-- ' || EMPLOYEE.LAST_NAME || ' from: ' || TO_CHAR(EMPLOYEE.START_DATE, 'DD-MM-YY') || ' until ' || TO_CHAR(EMPLOYEE.END_DATE, 'DD-MM-YY'));
        END LOOP;
    
    END LOOP;
END;
/

--Exercise 2
CREATE OR REPLACE FUNCTION job_of(j_id IN JOBS.JOB_ID%type)
    RETURN VARCHAR2
IS
    j_title JOBS.JOB_TITLE%type;
BEGIN
    SELECT JOB_TITLE INTO j_title
    FROM JOBS
    WHERE JOB_ID = j_id;
    RETURN j_title;
END job_of;
/

select first_name, last_name, job_of(job_id)
from employees;

--Exercise 3
CREATE OR REPLACE TRIGGER STOCK_MANAGERS_CHECK
AFTER INSERT OR UPDATE OF JOB_ID ON EMPLOYEES
DECLARE
	managers_count NUMBER(1);
BEGIN
	SELECT COUNT(*) INTO managers_count
	FROM EMPLOYEES
	WHERE JOB_ID = 'ST_MAN';

	IF (managers_count > 5) THEN
		RAISE_APPLICATION_ERROR(-20001, 'There cannot be more than 5 stock managers.');
	END IF;

END STOCK_MANAGERS_CHECK;
/

UPDATE EMPLOYEES
SET JOB_ID = 'ST_MAN'
WHERE EMPLOYEE_ID = 174;

ROLLBACK;

--Exercise 4
CREATE OR REPLACE TRIGGER SA_REP_COM
BEFORE INSERT OR UPDATE OF JOB_ID ON EMPLOYEES
FOR EACH ROW
BEGIN
	IF (:NEW.JOB_ID = 'SA_REP') THEN
		:NEW.COMMISSION_PCT := 0.5;
	END IF;
END SA_REP_COM;
/

UPDATE EMPLOYEES
SET JOB_ID = 'SA_REP'
WHERE EMPLOYEE_ID = 130;

ROLLBACK;
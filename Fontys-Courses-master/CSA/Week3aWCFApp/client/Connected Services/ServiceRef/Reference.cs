//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace client.ServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/MyWebshopContract")]
    [System.SerializableAttribute()]
    public partial class Item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIdField, value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stock {
            get {
                return this.StockField;
            }
            set {
                if ((this.StockField.Equals(value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="MyWebshopContract", ConfigurationName="ServiceRef.IWebshop", CallbackContract=typeof(client.ServiceRef.IWebshopCallback))]
    public interface IWebshop {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="MyWebshopContract/IWebshop/connect")]
        void connect();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="MyWebshopContract/IWebshop/connect")]
        System.Threading.Tasks.Task connectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="MyWebshopContract/IWebshop/GetWebshopName", ReplyAction="MyWebshopContract/IWebshop/GetWebshopNameResponse")]
        string GetWebshopName();
        
        [System.ServiceModel.OperationContractAttribute(Action="MyWebshopContract/IWebshop/GetWebshopName", ReplyAction="MyWebshopContract/IWebshop/GetWebshopNameResponse")]
        System.Threading.Tasks.Task<string> GetWebshopNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="MyWebshopContract/IWebshop/GetProductsList", ReplyAction="MyWebshopContract/IWebshop/GetProductsListResponse")]
        client.ServiceRef.Item[] GetProductsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="MyWebshopContract/IWebshop/GetProductsList", ReplyAction="MyWebshopContract/IWebshop/GetProductsListResponse")]
        System.Threading.Tasks.Task<client.ServiceRef.Item[]> GetProductsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="MyWebshopContract/IWebshop/GetProductInfo", ReplyAction="MyWebshopContract/IWebshop/GetProductInfoResponse")]
        string GetProductInfo(string ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="MyWebshopContract/IWebshop/GetProductInfo", ReplyAction="MyWebshopContract/IWebshop/GetProductInfoResponse")]
        System.Threading.Tasks.Task<string> GetProductInfoAsync(string ProductId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="MyWebshopContract/IWebshop/BuyProduct")]
        void BuyProduct(string ProductId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="MyWebshopContract/IWebshop/BuyProduct")]
        System.Threading.Tasks.Task BuyProductAsync(string ProductId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWebshopCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="MyWebshopContract/IWebshop/newClientConnected")]
        void newClientConnected(int numberOfConnectedClients);
        
        [System.ServiceModel.OperationContractAttribute(Action="MyWebshopContract/IWebshop/productSold", ReplyAction="MyWebshopContract/IWebshop/productSoldResponse")]
        void productSold(client.ServiceRef.Item product);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWebshopChannel : client.ServiceRef.IWebshop, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebshopClient : System.ServiceModel.DuplexClientBase<client.ServiceRef.IWebshop>, client.ServiceRef.IWebshop {
        
        public WebshopClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public WebshopClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public WebshopClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WebshopClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WebshopClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void connect() {
            base.Channel.connect();
        }
        
        public System.Threading.Tasks.Task connectAsync() {
            return base.Channel.connectAsync();
        }
        
        public string GetWebshopName() {
            return base.Channel.GetWebshopName();
        }
        
        public System.Threading.Tasks.Task<string> GetWebshopNameAsync() {
            return base.Channel.GetWebshopNameAsync();
        }
        
        public client.ServiceRef.Item[] GetProductsList() {
            return base.Channel.GetProductsList();
        }
        
        public System.Threading.Tasks.Task<client.ServiceRef.Item[]> GetProductsListAsync() {
            return base.Channel.GetProductsListAsync();
        }
        
        public string GetProductInfo(string ProductId) {
            return base.Channel.GetProductInfo(ProductId);
        }
        
        public System.Threading.Tasks.Task<string> GetProductInfoAsync(string ProductId) {
            return base.Channel.GetProductInfoAsync(ProductId);
        }
        
        public void BuyProduct(string ProductId) {
            base.Channel.BuyProduct(ProductId);
        }
        
        public System.Threading.Tasks.Task BuyProductAsync(string ProductId) {
            return base.Channel.BuyProductAsync(ProductId);
        }
    }
}
